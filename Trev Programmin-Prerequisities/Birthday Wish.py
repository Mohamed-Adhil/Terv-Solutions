'''
Christian Grey want to call Anastasia for her birthday. They broke up their love 2 months ago. Tomorrow is Anastasia's birthday and Christian wants to wish her.


Christian open the phonebook and type "anastasia". 10 contacts with same name appears on the screen. Time is 11.59 P.M and only a minute left.


On the other side, Anastasia is waiting for his call. She is expecting his call exactly at 12. He can't able to make the call because of the duplicate contacts. After that day he decides to identify duplicates and asks your help.


Now your task is to completely remove all the contacts which is present in the list 'K' times. Christian will give you his phone and the number 'K'.

Input Format : The First line consists of two space separated integer inputs N and K,
where ,
N refers to the number of contacts.
K refers to the number of Occurrences of a contact in which you have to remove completely.
The Second line consists of N space separated integers which refers to contacts.

Input Constraints : 1<=N<=10^4
1<=K<=100

Output Format : List of contacts after removing 'K' time occurred contacts.

Sample Input :

815 73
59 20 92 48 60 14 53 98 62 76 8 69 16 49 15 92 43 53 81 69 62 48 22 38 6 70 34 74 56 51 77 20 32 76 90 10 33 89 41 7 7 7 14 53 39 63 5 26 38 96 61 87 39 40 82 73 82 9 4 30 34 40 91 14 57 26 14 81 59 73 30 40 53 11 87 36 96 51 61 79 30 62 7 53 88 44 15 82 45 43 71 72 1 85 8 48 90 79 26 33 80 10 6 89 55 97 77 54 75 10 45 20 62 78 90 39 93 37 40 60 38 68 65 87 71 99 17 35 60 59 82 12 46 48 69 35 82 96 96 46 90 19 64 53 79 93 3 48 69 1 35 70 14 41 10 59 62 36 61 75 8 86 24 57 71 95 74 61 7 17 68 95 78 79 6 33 29 64 9 15 71 5 87 17 50 57 51 72 77 85 59 43 95 50 80 82 99 14 42 59 88 85 27 20 96 23 42 36 15 17 49 97 36 2 44 15 30 84 9 69 82 33 2 15 79 97 62 55 42 76 99 84 44 70 7 58 25 100 31 38 64 4 52 69 9 74 78 17 71 91 10 67 65 85 40 83 95 96 50 36 57 80 18 23 80 86 44 42 82 22 80 86 80 91 39 11 77 22 38 61 72 89 93 51 98 69 56 61 14 42 35 57 44 99 60 61 31 45 9 74 42 37 65 87 58 82 94 66 71 85 92 43 98 52 92 29 88 28 96 100 60 74 98 16 63 80 99 36 60 84 60 52 47 79 43 80 73 12 53 72 27 10 30 77 64 55 50 23 20 79 54 27 75 25 33 80 1 38 74 39 15 86 60 6 5 65 76 26 51 84 3 83 19 88 18 68 41 61 83 17 59 7 35 5 80 76 39 91 47 8 88 3 38 61 79 10 82 68 62 100 45 75 19 14 37 43 80 92 45 44 63 98 49 84 38 8 79 25 24 20 93 4 40 91 11 86 10 37 51 47 25 36 53 22 27 90 49 22 33 30 68 60 13 94 30 18 73 26 96 52 74 12 86 6 46 80 89 31 48 51 99 77 20 62 99 67 76 9 56 4 92 29 75 96 50 58 16 61 41 51 90 55 57 29 76 53 91 12 83 84 5 44 54 67 58 52 9 39 73 86 89 37 53 78 2 85 20 35 5 37 45 93 41 26 17 22 28 44 43 68 43 67 69 49 68 21 20 69 43 11 99 22 9 9 18 51 55 49 28 100 44 15 76 35 48 75 80 30 58 54 77 59 37 40 35 33 57 46 97 88 100 76 93 44 31 16 43 40 16 54 2 43 52 88 85 35 14 9 32 54 28 35 60 89 17 86 76 33 37 19 93 77 92 48 73 87 48 47 34 67 47 38 73 10 90 49 37 97 8 55 42 14 7 1 72 99 3 59 23 53 29 26 84 20 56 20 56 71 84 19 16 51 65 49 56 30 73 88 7 43 74 64 71 40 21 59 41 13 96 83 74 7 99 42 54 14 100 52 98 51 78 43 62 42 7 47 96 35 77 41 75 44 29 56 26 97 94 80 26 24 42 2 53 4 34 60 17 94 43 72 35 92 27 11 86 64 59 53 93 34 81 17 66 55 14 34 35 53 60 30 43 99 84 68 78 1 63 49 58 31 21 79 17 26 73 46 17 12 80 7 97 40 64 67 61 19 79 50 11 30 26 68 50 84 48 45 86 44 20 35 68 15 92 53 41 57 72 74 68 22 63 48 82 64 18 74 88 64 64 29 30 90 10 34 36 74 23 54 4 17 50 6 11 76 71 70 24 94 22 14 24 37 23 84 58 97 38 15 92 89 12 88 6 43 79 5 86 24 63 100 68 87 80 74 75
Sample Output :

59 20 92 48 60 14 53 98 62 76 8 69 16 49 15 92 43 53 81 69 62 48 22 38 6 70 34 74 56 51 77 20 32 76 90 10 33 89 41 7 7 7 14 53 39 63 5 26 38 96 61 87 39 40 82 73 82 9 4 30 34 40 91 14 57 26 14 81 59 73 30 40 53 11 87 36 96 51 61 79 30 62 7 53 88 44 15 82 45 43 71 72 1 85 8 48 90 79 26 33 80 10 6 89 55 97 77 54 75 10 45 20 62 78 90 39 93 37 40 60 38 68 65 87 71 99 17 35 60 59 82 12 46 48 69 35 82 96 96 46 90 19 64 53 79 93 3 48 69 1 35 70 14 41 10 59 62 36 61 75 8 86 24 57 71 95 74 61 7 17 68 95 78 79 6 33 29 64 9 15 71 5 87 17 50 57 51 72 77 85 59 43 95 50 80 82 99 14 42 59 88 85 27 20 96 23 42 36 15 17 49 97 36 2 44 15 30 84 9 69 82 33 2 15 79 97 62 55 42 76 99 84 44 70 7 58 25 100 31 38 64 4 52 69 9 74 78 17 71 91 10 67 65 85 40 83 95 96 50 36 57 80 18 23 80 86 44 42 82 22 80 86 80 91 39 11 77 22 38 61 72 89 93 51 98 69 56 61 14 42 35 57 44 99 60 61 31 45 9 74 42 37 65 87 58 82 94 66 71 85 92 43 98 52 92 29 88 28 96 100 60 74 98 16 63 80 99 36 60 84 60 52 47 79 43 80 73 12 53 72 27 10 30 77 64 55 50 23 20 79 54 27 75 25 33 80 1 38 74 39 15 86 60 6 5 65 76 26 51 84 3 83 19 88 18 68 41 61 83 17 59 7 35 5 80 76 39 91 47 8 88 3 38 61 79 10 82 68 62 100 45 75 19 14 37 43 80 92 45 44 63 98 49 84 38 8 79 25 24 20 93 4 40 91 11 86 10 37 51 47 25 36 53 22 27 90 49 22 33 30 68 60 13 94 30 18 73 26 96 52 74 12 86 6 46 80 89 31 48 51 99 77 20 62 99 67 76 9 56 4 92 29 75 96 50 58 16 61 41 51 90 55 57 29 76 53 91 12 83 84 5 44 54 67 58 52 9 39 73 86 89 37 53 78 2 85 20 35 5 37 45 93 41 26 17 22 28 44 43 68 43 67 69 49 68 21 20 69 43 11 99 22 9 9 18 51 55 49 28 100 44 15 76 35 48 75 80 30 58 54 77 59 37 40 35 33 57 46 97 88 100 76 93 44 31 16 43 40 16 54 2 43 52 88 85 35 14 9 32 54 28 35 60 89 17 86 76 33 37 19 93 77 92 48 73 87 48 47 34 67 47 38 73 10 90 49 37 97 8 55 42 14 7 1 72 99 3 59 23 53 29 26 84 20 56 20 56 71 84 19 16 51 65 49 56 30 73 88 7 43 74 64 71 40 21 59 41 13 96 83 74 7 99 42 54 14 100 52 98 51 78 43 62 42 7 47 96 35 77 41 75 44 29 56 26 97 94 80 26 24 42 2 53 4 34 60 17 94 43 72 35 92 27 11 86 64 59 53 93 34 81 17 66 55 14 34 35 53 60 30 43 99 84 68 78 1 63 49 58 31 21 79 17 26 73 46 17 12 80 7 97 40 64 67 61 19 79 50 11 30 26 68 50 84 48 45 86 44 20 35 68 15 92 53 41 57 72 74 68 22 63 48 82 64 18 74 88 64 64 29 30 90 10 34 36 74 23 54 4 17 50 6 11 76 71 70 24 94 22 14 24 37 23 84 58 97 38 15 92 89 12 88 6 43 79 5 86 24 63 100 68 87 80 74 75
'''
n, k = map(int, input().split())
l = list(map(int, input().split()))
l1 = []
for i in l:
    if l.count(i) != k:
        l1.append(i)
for i in l:
    print(i, end=' ')
